@using ECOE.Models;
@model IEnumerable<ECOE.Models.TurmaPessoa>
@{
    /**/

    ViewBag.Title = "AlunoTurma";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int turma = ViewBag.turma;
    var turman = ViewBag.turman;
    var Mensagem = ViewBag.Mensagem;
    ECOEEntities bd = new ECOEEntities();
    var avaliacoes = bd.Avaliacoes.Where(x => x.TurmaId == turma).ToList();
    var questoes = bd.AlunoQuestao.ToList();
    var alunoQuestaoGeral = questoes.Join(avaliacoes,
                                      questao => questao.Questao.AvaliacaoId,
                                      avaliacao => avaliacao.AvaliacaoId,
                                      (questao, avaliacao) => questao
                                      );
    var notaMax = 0.0;
    var notaTotal = 0.0;
    var nota = 0.0;
    int cont = 0;
    object[] notaAvaliacao = new object[avaliacoes.Count()];
    var mediaTurma = 0.0;
    var notaindividual = "";
}

@*<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>*@

@if (Mensagem != null)
{
    if (Mensagem == "1")
    {
        <div class="alert alert-success col-md-8 " style="margin-top:1%; margin:auto">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <i class="material-icons">close</i>
            </button>
            <span style="font-size: 20px; text-align:center;">Cadastro efetuado com sucesso!</span>
        </div>
    }
    if (Mensagem == "2")
    {
        <div class="alert alert-danger col-md-8 " style="margin-top:1%; margin:auto">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <i class="material-icons">close</i>
            </button>
            <span style="font-size: 20px; text-align:center;"> Professor Já Cadastrado nesta turma!</span>
        </div>
    }
    if (Mensagem == "3")
    {
        <div class="alert alert-warning col-md-8 " style="margin-top:1%; margin:auto">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <i class="material-icons">close</i>
            </button>
            <span style="font-size: 20px; text-align:center;"> Professor desativado o ative e tente novamente!</span>
        </div>
    }
}

<div class="form-horizontal" style="margin-top:3%;">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header card-header-primary card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">perm_identity</i>
                </div>
                <h4 class="card-title">
                    Adicionar aluno à turma: <span style="font-weight:bold; font-size:20px;">@turman</span>
                </h4>
            </div>
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group has-rose bmd-form-group">
                                <label class="bmd-label-floating">RA</label>
                                <input name="RA" id="ra" type="number" class="form-control">
                                <input name="TurmaId" type="hidden" value="@turma" class="form-control">
                            </div>
                        </div>
                    </div>
                    <div class="card-footer ml-auto mr-auto">
                        <div>
                            <div class="col-md-offset-2 col-md-2">
                                <a href="@Url.Action("ListTurma","Turma", new { avaliacaoId = ViewBag.avaliacao})">
                                    <input type="button" value="Cancelar" class="btn btn-danger" style="font-weight:bold; font-family:Arial;" />
                                </a>
                            </div>
                        </div>
                        <div>
                            <input type="submit" value="Salvar" class="btn btn-primary pull-right">
                            <div class="clearfix"></div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@* Modal Excluir *@

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        @using (Html.BeginForm("RemoveAluno", "Turma", FormMethod.Post))
        {
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Remover</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Realmente deseja remover
                    <input type="hidden" id="did" name="id" value="" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <input type="submit" value="Remover" class="btn btn-danger">
                </div>
            </div>
        }
    </div>
</div>

@* Modal Excluir Fim *@


<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header card-header-primary card-header-icon">
                        <div class="card-icon">
                            <i class="material-icons">content_paste</i>
                        </div>
                        <h4 class="card-title" style="font-weight:bold;">Alunos</h4>
                    </div>
                    @foreach (var i in avaliacoes)
                    {
                        var avaliacao = avaliacoes.FirstOrDefault(x => x.AvaliacaoId == i.AvaliacaoId);
                        var alunoQuestao = alunoQuestaoGeral.Where(x => x.Questao.AvaliacaoId == i.AvaliacaoId);
                        notaMax = alunoQuestao.Count() * 2;
                        if (notaMax > 0)
                        {
                            notaTotal = alunoQuestao.Sum(x => x.Nota);
                            nota += (notaTotal / notaMax) * Convert.ToDouble(avaliacao.Peso);
                        }
                        notaAvaliacao[cont] = avaliacao.Nome + ": " + Math.Round((notaTotal / notaMax) * Convert.ToDouble(avaliacao.Peso), 2);

                        cont++;
                    }
                    <div class="card-body">
                        <div class="toolbar">
                            @*Media da turma: @Math.Round(nota,2)*@
                            <div>
                                @foreach (var item in notaAvaliacao)
                                {
                                    <span> Media em @item</span>
                                    <br />
                                }
                            </div>
                        </div>
                        <div class="material-datatables">
                            <table id="datatables" class="table table-striped table-no-bordered table-hover" cellspacing="0" style="width:100%">
                                <thead class="thead-dark">
                                    <tr>
                                        <th>Nome</th>
                                        <th>RA</th>
                                        <th>avaliação</th>
                                        <th>Nota</th>
                                        <th class="disabled-sorting">Ações</th>
                                    </tr>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <th>Name</th>
                                        <th>RA</th>
                                        <th>avaliação</th>
                                        <th>Nota</th>
                                        <th>Ações</th>
                                    </tr>
                                </tfoot>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.Pessoa.Nome)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Pessoa.RA)</td>
                                            @{
                                                nota = 0;
                                                <td>
                                                    @foreach (var i in avaliacoes)
                                                    {
                                                        if (cont != 2)
                                                        {
                                                            cont = 1;
                                                        }
                                                        var avaliacao = avaliacoes.FirstOrDefault(x => x.AvaliacaoId == i.AvaliacaoId);
                                                        var alunoQuestao = alunoQuestaoGeral.Where(x => x.Questao.AvaliacaoId == i.AvaliacaoId && x.PessoaId == item.PessoaId);
                                                        notaMax = alunoQuestao.Count() * 2;
                                                        if (notaMax > 0)
                                                        {
                                                            notaTotal = alunoQuestao.Sum(x => x.Nota);
                                                            nota += (notaTotal / notaMax) * Convert.ToDouble(avaliacao.Peso);
                                                            notaindividual = avaliacao.Nome + ": " + Math.Round((notaTotal / notaMax) * Convert.ToDouble(avaliacao.Peso), 2);
                                                            <span> @notaindividual</span>
                                                            <br />
                                                        }
                                                        cont++;
                                                        mediaTurma += nota;
                                                    }
                                                </td>
                                                <td>
                                                    <span>@Math.Round(nota, 2)</span>
                                                </td>
                                            }
                                            @if (!HttpContext.Current.User.IsInRole("Aluno"))
                                            {
                                                <td>
                                                    <a title="Notas" href="@Url.Action("Resultado","AlunoAvaliacao", new {Aluno= item.Pessoa.PessoaId, TurmaId = item.TurmaId, nota = nota})" class="btn btn-link btn-primary btn-just-icon like"><i class="material-icons">content_paste</i></a>
                                                    @if (HttpContext.Current.User.IsInRole("Adm") || HttpContext.Current.User.IsInRole("Coordenador"))
                                                    {
                                                        <button title="Remover" data-toggle="modal" data-target="#exampleModal" class="btn btn-link btn-danger btn-just-icon remove" id="remo" onclick="myFunction('@item.PessoaId')"><i class="material-icons">close</i></button>
                                                    }
                                                </td>
                                            }
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    function myFunction(id) {
        $("#did").val(id);
    }

    function media(media) {
        $("#media").val(media)
    }

</script>